apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myfirstapp.fullname" . }}
  labels:
    {{- include "myfirstapp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "myfirstapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myfirstapp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myfirstapp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            # - mountPath: "/storage/"
            #   name: task-pv-storage
            - name: secret-mount
              mountPath: "/tmp/"
          livenessProbe:
            httpGet:
              path: /
              port: 5000
              scheme: HTTPS
            initialDelaySeconds: 110
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 100
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        # - name: task-pv-storage
        #   persistentVolumeClaim:
        #     claimName: mypvc
        - name: secret-mount
          secret:
            secretName: {{ .Values.secret.name }}
      {{- with .Values.nodeSelector }} 
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}